---TAO CONTEXT
CREATE CONTEXT LUU_SESSION USING NAMVU.CONTEXT_PACKAGE;

---SET_CONTEXT
CREATE OR REPLACE PACKAGE CONTEXT_PACKAGE AS
PROCEDURE SET_CONTEXT;
END;

---THUC HIEN TRONG BODY CONTEXT
CREATE OR REPLACE PACKAGE BODY CONTEXT_PACKAGE IS
PROCEDURE SET_CONTEXT IS
V_USER VARCHAR2(50);
V_ID CHAR(20);
BEGIN
   DBMS_SESSION.SET_CONTEXT('LUU_SESSION','SETUP','TRUE');
    ---GET NAME OF SESSION USER
    V_USER := SYS_CONTEXT('USERENV', 'SESSION_USER');
    BEGIN
    SELECT MANHANVIEN INTO V_ID FROM NAMVU.NHANVIEN WHERE TRIM(UPPER(NAMVU.NHANVIEN.TAIKHOAN)) = TRIM(V_USER);
    DBMS_SESSION.SET_CONTEXT('LUU_SESSION','USER_ID',V_ID);  
    EXCEPTION
        WHEN no_data_found THEN
            DBMS_SESSION.SET_CONTEXT('LUU_SESSION','USER_ID',0);
    END;
    DBMS_SESSION.SET_CONTEXT('LUU_SESSION','SETUP','FALSE');
    END SET_CONTEXT;
    END CONTEXT_PACKAGE;

--PUBLIC CONTEXT
GRANT EXECUTE ON NAMVU.CONTEXT_PACKAGE TO PUBLIC;
CREATE OR REPLACE PUBLIC SYNONYM CONTEXT_PACKAGE FOR NAMVU.CONTEXT_PACKAGE;

---TAO TRIGGER EXECUTE CONTEXT KHI LOGON ON VAO DB
CREATE OR REPLACE TRIGGER NAMVU.SET_SECURITY_CONTEXT
AFTER LOGON ON DATABASE
BEGIN
    NAMVU.CONTEXT_PACKAGE.SET_CONTEXT;
END;

---TEST TRIGGER
SELECT SYS_CONTEXT('USERENV', 'SESSION_USER')TENNV, SYS_CONTEXT('LUU_SESSION', 'USER_ID') MANV FROM DUAL;

---TAO SECURITY_PACKAGE
CREATE OR REPLACE PACKAGE SECURITY_PACKAGE AS
FUNCTION SELECT_KHO_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2;
FUNCTION SELECT_CHITIETKHO_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2;
FUNCTION SELECT_PHIEUNHAP_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2;
FUNCTION SELECT_CHITIETPHIEUNHAP_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2;
FUNCTION SELECT_PHIEUXUAT_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2;
FUNCTION SELECT_CHITIETPHIEUXUAT_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2;
END SECURITY_PACKAGE;

---TAO BODY CHO SECUTITY_PACKAGE
CREATE OR REPLACE PACKAGE BODY SECURITY_PACKAGE IS
FUNCTION SELECT_KHO_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2 IS
PREDICATE VARCHAR2(2000);
BEGIN
PREDICATE := '1=2';
IF(SYS_CONTEXT('USERENV','SESSION_USER') = 'NAMVU') THEN
PREDICATE := NULL;
ELSE
PREDICATE := 'TRUONGKHO = TRIM(SYS_CONTEXT(''LUU_SESSION'',''USER_ID''))';
END IF;
RETURN PREDICATE;
END SELECT_KHO_SECURITY;
FUNCTION SELECT_CHITIETKHO_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2 IS
MA_KHO CHAR(5);
PREDICATE VARCHAR2(2000);
BEGIN
PREDICATE := '1=2';
IF(SYS_CONTEXT('USERENV','SESSION_USER') = 'NAMVU') THEN
PREDICATE := NULL;
ELSE
SELECT MAKHO INTO MA_KHO FROM NAMVU.KHO;
PREDICATE := 'MAKHO = (SELECT MAKHO FROM KHO)';
END IF;
RETURN PREDICATE;
END SELECT_CHITIETKHO_SECURITY;
FUNCTION SELECT_PHIEUNHAP_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2 IS
PREDICATE VARCHAR2(2000);
BEGIN
PREDICATE := '1=2';
IF(SYS_CONTEXT('USERENV','SESSION_USER') = 'NAMVU') THEN
PREDICATE := NULL;
ELSE
PREDICATE := 'MAKHO = (SELECT MAKHO FROM KHO)';
END IF;
RETURN PREDICATE;
END SELECT_PHIEUNHAP_SECURITY;
FUNCTION SELECT_CHITIETPHIEUNHAP_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2 IS
PREDICATE VARCHAR2(2000);
BEGIN
PREDICATE := '1=2';
IF(SYS_CONTEXT('USERENV','SESSION_USER') = 'NAMVU') THEN
PREDICATE := NULL;
ELSE
PREDICATE := 'MAPHIEUNHAP IN (SELECT MAPHIEUNHAP FROM PHIEUNHAP)';
END IF;
RETURN PREDICATE;
END SELECT_CHITIETPHIEUNHAP_SECURITY;
FUNCTION SELECT_PHIEUXUAT_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2 IS
PREDICATE VARCHAR2(2000);
BEGIN
PREDICATE := '1=2';
IF(SYS_CONTEXT('USERENV','SESSION_USER') = 'NAMVU') THEN
PREDICATE := NULL;
ELSE
PREDICATE := 'MAKHO = (SELECT MAKHO FROM KHO)';
END IF;
RETURN PREDICATE;
END SELECT_PHIEUXUAT_SECURITY;
FUNCTION SELECT_CHITIETPHIEUXUAT_SECURITY(OWNER VARCHAR2,OBJNAME VARCHAR2)
RETURN VARCHAR2 IS
PREDICATE VARCHAR2(2000);
BEGIN
PREDICATE := '1=2';
IF(SYS_CONTEXT('USERENV','SESSION_USER') = 'NAMVU') THEN
PREDICATE := NULL;
ELSE
PREDICATE := 'MAPHIEUXUAT IN (SELECT MAPHIEUXUAT FROM PHIEUXUAT)';
END IF;
RETURN PREDICATE;
END SELECT_CHITIETPHIEUXUAT_SECURITY;
END SECURITY_PACKAGE;

----GRANT EXECUTE FOR ALL
GRANT EXECUTE ON NAMVU.SECURITY_PACKAGE TO PUBLIC;
CREATE OR REPLACE PUBLIC SYNONYM SECURITY_PACKAGE FOR NAMVU.SECURITY_PACKAGE;

---APPLY SECURITY POLICY CHO BANG NHANVIEN
BEGIN
    dbms_rls.add_policy('NAMVU','KHO','SELECT_KHO_POLICY','NAMVU','SECURITY_PACKAGE.SELECT_KHO_SECURITY','SELECT',TRUE);
    dbms_rls.add_policy('NAMVU','CHITIETKHO','SELECT_CHITIETKHO_POLICY','NAMVU','SECURITY_PACKAGE.SELECT_CHITIETKHO_SECURITY','SELECT',TRUE);
    dbms_rls.add_policy('NAMVU','PHIEUNHAP','SELECT_PHIEUNHAP_POLICY','NAMVU','SECURITY_PACKAGE.SELECT_PHIEUNHAP_SECURITY','SELECT',TRUE);
    dbms_rls.add_policy('NAMVU','CHITIETPHIEUNHAP','SELECT_CHITIETPHIEUNHAP_POLICY','NAMVU','SECURITY_PACKAGE.SELECT_CHITIETPHIEUNHAP_SECURITY','SELECT',TRUE);
    dbms_rls.add_policy('NAMVU','PHIEUXUAT','SELECT_PHIEUXUAT_POLICY','NAMVU','SECURITY_PACKAGE.SELECT_PHIEUXUAT_SECURITY','SELECT',TRUE);
    dbms_rls.add_policy('NAMVU','CHITIETPHIEUXUAT','SELECT_CHITIETPHIEUXUAT_POLICY','NAMVU','SECURITY_PACKAGE.SELECT_CHITIETPHIEUXUAT_SECURITY','SELECT',TRUE);
END;

---TEST POLICY
SELECT * FROM NAMVU.CHITIETPHIEUXUAT;